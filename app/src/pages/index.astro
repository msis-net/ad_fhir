---
import Layout from "@layouts/Layout.astro";
import Datepicker from "@components/vue/datepicker.vue";
import Acceptlistv2 from "@components/orca_api/acceptlistv2.vue";
import ChartAcceptlistv2 from "@components/chart/chartAacceptlistv2.vue"
import ChartComp from "@components/chart/chartComp.vue";
const label = 'Dashboard v1'
const path = "."



export const prerender = true;

//import { account, depid, div, kanri,name,role,sid,timeout } = Astro.props;

---

<Layout title="dashboard" path = {path} page="index">
	<main class="app-main"> <!--begin::App Content Header-->
        <div class="app-content-header"> <!--begin::Container-->
            <div class="container-fluid"> <!--begin::Row-->
                <div class="row">
                    <div class="col-sm-4">
                      
                      <Datepicker @changeDate="changeDate" client:load />
                      
                    </div>
                    <div class="col-sm-2">
                   
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-end">
                            <li class="breadcrumb-item"><a href="/">Home</a></li>
                            <li class="breadcrumb-item active" aria-current="page">
                              {label}
                            </li>
                        </ol>
                    </div>
                </div> <!--end::Row-->
            </div> <!--end::Container-->
        </div> <!--end::App Content Header--> <!--begin::App Content-->
        
        <div class="app-content"> <!--begin::Container-->
            <div class="container-fluid"> 
              <div class="row">
                <div class="col-md-12">
                  <Acceptlistv2 client:visible />
                </div> 
              </div>
              <div class="row">
                <div class="row mt-3">
                  <ChartAcceptlistv2 client:only="vue" />
                </div>
              </div>
              <div class="row">
                <div class="row mt-3">
                  <!--
                    <ChartComp client:only="vue" />
                   -->
                  
                </div>
              </div>
            </div>
        </div> 
        
    </main> <!--end::App Main--> <!--begin::Footer-->
</Layout>

    <!-- Áí∞Â¢ÉÂ§âÊï∞Ë™≠Ëæº„É¢„Ç∏„É•„Éº„É´ -->
    <script is:inline src="./js/sessionStrage.js"></script>
    <script is:inline>
      function setEnv(key, value){ //FileMaker„Åã„ÇâCall
        sessionSet(key,value)
      }
      const comenv = sessionGetItem('env')
      if (!comenv){
        try{
          FileMaker.PerformScript ("üÖÜSetEnv")//setEnv()„ÅÆ„Ç≥„Éº„É´„Çí‰æùÈ†º
        }catch(e){
          console.log('Can not use Claris FileMaker Platform')
          
        }
      }else{
        console.log("There is already comenv")
      }
      
    </script>

<script is:inline
src="https://cdn.jsdelivr.net/npm/apexcharts@3.37.1/dist/apexcharts.min.js"
integrity="sha256-+vh8GkaU7C9/wbSLIcwq82tQ2wTf44aOHA8HlBMwRI8="
crossorigin="anonymous"></script>

    <!-- jsvectormap -->
    <script is:inline
      src="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/js/jsvectormap.min.js"
      integrity="sha256-/t1nN2956BT869E6H4V1dnt0X5pAQHPytli+1nTZm2Y="
      crossorigin="anonymous"></script>
    <script is:inline
      src="https://cdn.jsdelivr.net/npm/jsvectormap@1.5.3/dist/maps/world.js"
      integrity="sha256-XPpPaZlU8S/HWf7FZLAncLg2SAkP8ScUTII89x9D3lY="
      crossorigin="anonymous"></script>

    <!-- jsvectormap -->
    <script is:inline>
      const visitorsData = {
        US: 398, // USA
        SA: 400, // Saudi Arabia
        CA: 1000, // Canada
        DE: 500, // Germany
        FR: 760, // France
        CN: 300, // China
        AU: 700, // Australia
        BR: 600, // Brazil
        IN: 800, // India
        GB: 320, // Great Britain
        RU: 3000, // Russia
      };

      // World map by jsVectorMap
      const map = new jsVectorMap({
        selector: "#world-map",
        map: "world",
      });

      // Sparkline charts
      const option_sparkline1 = {
        series: [
          {
            data: [1000, 1200, 920, 927, 931, 1027, 819, 930, 1021],
          },
        ],
        chart: {
          type: "area",
          height: 50,
          sparkline: {
            enabled: true,
          },
        },
        stroke: {
          curve: "straight",
        },
        fill: {
          opacity: 0.3,
        },
        yaxis: {
          min: 0,
        },
        colors: ["#DCE6EC"],
      };

      const sparkline1 = new ApexCharts(
        document.querySelector("#sparkline-1"),
        option_sparkline1,
      );
      sparkline1.render();

      const option_sparkline2 = {
        series: [
          {
            data: [515, 519, 520, 522, 652, 810, 370, 627, 319, 630, 921],
          },
        ],
        chart: {
          type: "area",
          height: 50,
          sparkline: {
            enabled: true,
          },
        },
        stroke: {
          curve: "straight",
        },
        fill: {
          opacity: 0.3,
        },
        yaxis: {
          min: 0,
        },
        colors: ["#DCE6EC"],
      };

      const sparkline2 = new ApexCharts(
        document.querySelector("#sparkline-2"),
        option_sparkline2,
      );
      sparkline2.render();

      const option_sparkline3 = {
        series: [
          {
            data: [15, 19, 20, 22, 33, 27, 31, 27, 19, 30, 21],
          },
        ],
        chart: {
          type: "area",
          height: 50,
          sparkline: {
            enabled: true,
          },
        },
        stroke: {
          curve: "straight",
        },
        fill: {
          opacity: 0.3,
        },
        yaxis: {
          min: 0,
        },
        colors: ["#DCE6EC"],
      };

      const sparkline3 = new ApexCharts(
        document.querySelector("#sparkline-3"),
        option_sparkline3,
      );
      sparkline3.render();
    </script>@store/localStore